(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{368:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ajax阶段晨读资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax阶段晨读资料"}},[t._v("#")]),t._v(" ajax阶段晨读资料")]),t._v(" "),a("h2",{attrs:{id:"_1、不定宽高的div水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、不定宽高的div水平垂直居中"}},[t._v("#")]),t._v(" 1、不定宽高的div水平垂直居中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答: 1、使用定位和translate来实现\n\t\tdiv{\n\t\t\tposition:absolute;\n\t\t\ttop: 50%;\n             left: 50%;\n             transform: translate(-50%, -50%);\n\t\t}\n\t2、使用flex来实现\n        div {\n           display: flex;\n           justify-content:center; //子元素水平居中\n           align-items:center; //子元素垂直居中\n         }\n      \n    3、使用定位和margin来实现\n        #box {\n            width: 100px;\n            height: 100px;\n            position: relative;\n        }\n\n        #content {\n            width: 50px;\n            height: 50px;\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            margin: auto;\n        }\n")])])]),a("h2",{attrs:{id:"_2、css写一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、css写一个三角形"}},[t._v("#")]),t._v(" 2、css写一个三角形")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答: div {\n      width: 0;\n      height: 0;\n      border: 20px solid transparent;\n      border-width: 40px 20px 0 0;\n      border-right-color: #f99;\n    }\n")])])]),a("h2",{attrs:{id:"_3、rem布局的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、rem布局的原理"}},[t._v("#")]),t._v(" 3、rem布局的原理")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答:rem是css的相对单位，rem缩放是相对根元素字体大小.\n   rem布局的本质是等比缩放，一般是基于宽度。\n   rem会配合媒体查询（或js动态获取屏幕宽度）来一起使用，来实现屏幕的适配。\n")])])]),a("h2",{attrs:{id:"_4、什么是重绘和重排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、什么是重绘和重排"}},[t._v("#")]),t._v(" 4、什么是重绘和重排")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答:\n\t重排: 当DOM元素影响了元素的几何属性（例如宽和高），浏览器需要重新计算元素的几何属性，同样其它元素的几何属性也会和位置也会因此受到影响。浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。这个过程称为“重排”。\n\t重绘: 完成重排后，浏览器会重新绘制受影响的部分到屏幕上中，该过程称为“重绘”。\n\t\n\t当我们改变DOM的大小，增加删除都会导致重排，当给DOM元素改变颜色的时候，会导致重绘，重排一定会重绘，重绘不会重排。重排会影响性能，所以我们尽快能的减少重排的操作\n")])])]),a("h2",{attrs:{id:"_5、flex常用的容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、flex常用的容器属性"}},[t._v("#")]),t._v(" 5、flex常用的容器属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答:\n1. flex-direction: 设置容器中的主轴方向\n2. flex-wrap: 项目在主轴方向上是否换行显示\n3. justify-content: 设置容器中的项目在主轴上的对齐方式\n4. align-items: 单行项目在侧轴上的排列方式\n5. align-content: 多行项目侧轴上的对齐方式\n6. flex-flow: 是flex-direction和flex-wrap的合写, 默认值为row nowrap\n")])])]),a("h2",{attrs:{id:"_6、h5新增了那些特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、h5新增了那些特性"}},[t._v("#")]),t._v(" 6、H5新增了那些特性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答: \n1. 语义化标签: header nav section article aside footer\n2. 多媒体标签: video audio\n3. 表单控件: number search email tel date file time  url\n4. 本地离线存储 localStorage 长期存储数据,改变浏览器数据不会丢失\n\t\t\t  sessionStorage 浏览器关闭数据会丢失\n5. 自定义属性 data-*\n6. 画布 Canvas\n7. 拖拽释放\n8. 新的技术web worker（就是为 JavaScript 创造多线程环境）\n9. 地理位置 (Geolocation) API\n")])])]),a("p",[t._v("##7、localStorage、sessionStorage和cookie的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 共同点"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 都是保存在浏览器端，且同源的。\n\t区别"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 请求不同"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\tcookie 数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。\n\t\t\t\tsessionStorage 和 localStorage不会自动把数据发给服务器，仅在本地保存。\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 存储大小限制也不同"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\tcookie 数据不能超过"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。\n\t\tsessionStorage 和 localStorage虽然也有存储大小的限制，但比cookie大得多，sessionStorage约"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("M、localStorage约"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("M 。\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 数据有效期不同"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\t sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持； \n\t\t localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；\n\t\t cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。 \n")])])]),a("h2",{attrs:{id:"_8、c3新增了那些特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、c3新增了那些特性"}},[t._v("#")]),t._v(" 8、C3新增了那些特性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答:\n1. 圆角 border-radius\n2. 盒子模型 box-sizing\n3. 阴影 box-shadow 盒子阴影  text-shadow 文字阴影\n4. 过渡 transition\n5. 2D转换transform  translate(平移) scale(缩放)  skew(斜切) rotate(旋转) transform-origin 控制转换中心点\n6. 3D转换 perspective(透视距)  transform-style(3D控件效果)\n7. 渐变 linear-gradient radial-gradient\n8. 弹性布局 flex\n9. 媒体查询 @media screen and () {...}\n10. 边框图片 border-image\n11. 自定义动画 @keyframes    animation\n12. 颜色 新增RGBA HSLA模式\n13. 背景 background-size   background-origin   background-clip\n")])])]),a("h2",{attrs:{id:"_9、值类型和引用类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、值类型和引用类型的区别"}},[t._v("#")]),t._v(" 9、值类型和引用类型的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、值类型\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）基本类型数据是值类型\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）保存与复制的是值本身\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("检测数据的类型\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、引用类型\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）保存与复制的是指向对象的一个指针\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v("检测数据类型\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法构造出的对象是引用型\n")])])]),a("h2",{attrs:{id:"_10、什么是深拷贝什么是浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、什么是深拷贝什么是浅拷贝"}},[t._v("#")]),t._v(" 10、什么是深拷贝什么是浅拷贝")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答: 浅拷贝: 拷贝对象的一层属性,如果对象里面还有对象,拷贝的是地址, 两者之间修改会有影响,适用于对象里面属性的值是简单数据类型的.\n    深拷贝: 拷贝对象的多层属性,如果对象里面还有对象,会继续拷贝,使用递归去实现.\n")])])]),a("h2",{attrs:{id:"_11、如何实现深拷贝和浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、如何实现深拷贝和浅拷贝"}},[t._v("#")]),t._v(" 11、如何实现深拷贝和浅拷贝")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n浅拷贝"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UI'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      love"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eat'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n深拷贝"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'前端'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      love"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      friuts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      meat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beef'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* if (typeof obj[k] == 'object') {\n          newObj[k] = getObj(obj[k])\n        } else {\n          newObj[k] = obj[k]\n        } */")]),t._v("\n        newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12、对闭包的理解-并能举出闭包的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、对闭包的理解-并能举出闭包的例子"}},[t._v("#")]),t._v(" 12、对闭包的理解？并能举出闭包的例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 闭包 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数和声明该函数的词法环境的组合")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("两个嵌套关系的函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("内部函数可以访问外部函数定义的变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    闭包的优点："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、形成私有空间，避免全局变量的污染\n               "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、持久化内存，保存数据\n    闭包的缺点："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、持久化内存，导致内存泄露\n    解决："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、尽快避免函数的嵌套，以及变量的引用\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、执行完的变量，可以赋值"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("，让垃圾回收机制，进行回收释放内存（当不在引用的变量，垃圾回收机制就会回收）\n例"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 点击li获取当前下标\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("333")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("444")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("555")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" lis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          lis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13、什么是原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、什么是原型和原型链"}},[t._v("#")]),t._v(" 13、什么是原型和原型链")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("答: 原型: 函数都有prototype属性,这个属性的值是个对象,称之为原型\n   原型链: 对象都有__proto__属性,这个属性指向它的原型对象,原型对象也是对象,也有__proto__属性,指向原型对象的原型对象,这样一层一层形成的链式结构称为原型链.\n")])])]),a("h2",{attrs:{id:"_14、call、apply和bind的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、call、apply和bind的区别"}},[t._v("#")]),t._v(" 14、call、apply和bind的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" call和apply方法都可以调用函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("方法内的第一个参数可以修改"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("的指向\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" call方法可以有多个参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("除了第一个参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("其他参数作为实参传递给函数\n\t\t\t apply方法最多有"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("个参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("第二个参数是个数组或伪数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("数组里面的每一项作为实参传递给函数\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" bind方法不能调用函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("它会创建一个副本函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并且绑定新函数的"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向bind返回的新的函数\n")])])]),a("h2",{attrs:{id:"_15、es6-es10新增常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、es6-es10新增常用方法"}},[t._v("#")]),t._v(" 15、es6-es10新增常用方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \nes6"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、解构赋值   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、箭头函数")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、字符串模板  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、扩展运算符  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、数组方法：map、filter、some等等\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("、类："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("关键字\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("、promise 主要用于异步计算\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("、函数参数默认值 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("、对象属性简写 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("、模块化："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("引入、exprot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("导出\n\nes7"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法，用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，否则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n\nes8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v("\n\nes9：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 允许你指定最终的逻辑\n\nes10"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、数组Array的flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("和flatmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   flat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("方法最基本的作用就是数组降维\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            arr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4]")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4, 5, 6]")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用 Infinity 作为深度，展开任意深度的嵌套数组")]),t._v("\n        arr3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4, 5, 6]")]),t._v("\n   flatmap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法首先使用映射函数映射")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("遍历"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("每个元素，然后将结果压缩成一个新数组\n")])])]),a("p",[t._v("##16、let、const和var的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("声明变量存在提升（提升当前作用域最顶端），"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("是不存在变量提升的情况\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("没有块级作用，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("存在块级作用域\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("允许重复声明，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("在同一作用域不允许重复声明\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("声明变量可以修改，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("是常量不能改变\n")])])]),a("h2",{attrs:{id:"_17、怎么理解函数的防抖和节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、怎么理解函数的防抖和节流"}},[t._v("#")]),t._v(" 17、怎么理解函数的防抖和节流")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、定义：\n防抖"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 就是指触发事件后在n秒内函数只能执行一次，如果在n秒内又触发了事件，则会重新计算函数执行时间。\n     例如：设定"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒执行，当你触发事件了，他会"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒后执行，但是在还剩"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("毫秒的时候你又触发了事件，那就会重新开始"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒之后再执行\n\n节流"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 就是指连续触发事件但是在设定的一段时间内中只执行一次函数。\n     例如：设定"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒执行，那你在"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒触发在多次，也只在"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("毫秒后执行一次\n     \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、防抖和节流的实现：\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ipt"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.ipt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onkeyup")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 防抖")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是防抖'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.ipt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onkeyup")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 节流")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是节流'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          timerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("##18、js的运行机制是什么")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('答：js是单线程执行的，页面加载时，会自上而下执行主线程上的同步任务，当主线程代码执行完毕时，才开始执行在任务队列中的异步任务。具体如下  \n    1.所有同步任务都在主线程上执行，形成一个执行栈。\n    2.主线程之外，还存在一个"任务队列(eventloop队列或者消息队列)"。只要异步任务有了运行结果，就在"任务队列"之中放置一个事件。\n    3.一旦"执行栈"中的所有同步任务执行完毕，系统就会读取"任务队列"，看看里面有哪些事件。哪些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。\n    4.主线程不断重复上面的第三步。\n')])])]),a("h2",{attrs:{id:"_19、异步函数有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、异步函数有哪些"}},[t._v("#")]),t._v(" 19、异步函数有哪些")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("JavaScript 中常见的异步函数有：定时器，事件和 ajax 等\n")])])]),a("h2",{attrs:{id:"_20、怎么理解面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、怎么理解面向对象"}},[t._v("#")]),t._v(" 20、怎么理解面向对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、面向对象是一种软件开发的思想和面向过程是相对应的，就是把程序看作一个对象，将属性和方法封装其中，以提高代码的灵活性、复用性、可扩展性。\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、面向对象有三大特性：封装、继承、多态。\n       封装：把相关的信息（无论数据或方法）存储在对象中的能力\n       继承：由另一个类（或多个类）得来类的属性和方法的能力\n       多态：编写能以多种方法运行的函数或方法的能力\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、基本思想是使用对象，类，继承，封装等基本概念来进行程序设计\n     易维护\n     易扩展\n     开发工作的重用性、继承性高，降低重复工作量。\n     缩短了开发周期\n")])])]),a("p",[t._v("##21、伪数组有哪些")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、参数 arguments，\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 对象列表（比如通过 document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getElementsByTags 得到的列表）、childNodes也是伪数组\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、jQuery 对象（比如 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("）\n")])])]),a("h2",{attrs:{id:"_22、真数组和伪数组的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22、真数组和伪数组的区别"}},[t._v("#")]),t._v(" 22、真数组和伪数组的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("伪数组：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、拥有length属性\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、不具有数组的方法\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、伪数组是一个Object，真数组是Array\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、伪数组的长度不可变，真数组的长度是可变的\n")])])]),a("p",[t._v("##23、伪数组怎么转真数组")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("伪数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("伪数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v("的新语法\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("伪数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("，使用扩展运算符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("也是"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v("的语法\n")])])]),a("h2",{attrs:{id:"_24、数组如何进行降维-扁平化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24、数组如何进行降维-扁平化"}},[t._v("#")]),t._v(" 24、数组如何进行降维（扁平化）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、利用Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some方法判断数组中是否还存在数组，es6展开运算符连接数组\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、使用数组的concat方法\n　   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、 使用数组的concat方法和扩展运算符\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、es6中的flat函数也可以实现数组的扁平化\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'中'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    注意：flat方法的infinity属性，可以实现多层数组的降维\n")])])]),a("p",[t._v("##25、什么是事件流")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 事件流是指事件传播的顺序"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("由事件捕获")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("目标事件")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" 事件冒泡\n")])])]),a("p",[t._v("##26、如何阻止冒泡和默认行为")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 阻止冒泡和捕获  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    阻止默认行为   e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    注意：addEventListener注册的事件，在高浏览器版本中，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("将没有效果，必须要用事件对象\n")])])]),a("h2",{attrs:{id:"_27、原生注册事件的方式有哪些-区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27、原生注册事件的方式有哪些-区别是什么"}},[t._v("#")]),t._v(" 27、原生注册事件的方式有哪些？区别是什么")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 注册方式\n\t\t  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" on "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 事件名称\n\t\t  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" addEventListener\n\t\t区别"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 使用on注册事件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("同一个元素只能注册一个同类型事件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("否则会覆盖。\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" addEventListener可以注册同一事件多次"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不会被覆盖。\n")])])]),a("h2",{attrs:{id:"_28、http和https的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28、http和https的区别"}},[t._v("#")]),t._v(" 28、http和https的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("https协议需要到"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v("申请证书，一般免费证书较少，因而需要一定费用。\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tls加密传输协议。\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("http和https使用的是完全不同的连接方式，用的端口也不一样，前者是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("，后者是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("。\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("http的连接很简单，是无状态的；"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v("协议是由"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。\n")])])]),a("h2",{attrs:{id:"_29、get-和post的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29、get-和post的区别"}},[t._v("#")]),t._v(" 29、get 和post的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 在url后面拼接参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("只能以文本的形式传递数据\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 传递的数据量小"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("KB左右\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 安全性低"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 会将数据显示在地址栏\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 速度快"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("通常用于安全性要求不高的请求\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 会缓存数据\n\tpost\n\t\t    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 安全性比较高\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 传递数据量大"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("请求对数据长度没有要求\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 请求不会被缓存"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("也不会保留在浏览器历史记录里\n")])])]),a("h2",{attrs:{id:"_30、项目中常遇到的状态码有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30、项目中常遇到的状态码有哪些"}},[t._v("#")]),t._v(" 30、项目中常遇到的状态码有哪些")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("  请求成功"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("开头的异步表示请求成功\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("  请求被允许"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("但请求内容没有改变"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("开头的一般请求完成\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("  请求格式错误"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("开头的一般表示请求错误\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("请求的资源")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("网页"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("不存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("  内部服务器错误"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("开头的一般都是指服务器错误\n")])])]),a("h2",{attrs:{id:"_31、jsonp的原理-以及优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31、jsonp的原理-以及优缺点"}},[t._v("#")]),t._v(" 31、jsonp的原理？以及优缺点")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 原理"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 利用script标签的src属性具有天然可跨域的特性，由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式响应给浏览器"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t优点"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 完美解决在测试或者开发中获取不同域下的数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。\n\t\t缺点：Jsonp只支持"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("请求而不支持post 请求"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("也即是说如果想传给后台一个json 格式的数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("此时问题就来了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 浏览器会报一个http状态码"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v("错误"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("告诉你请求格式不正确"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h2",{attrs:{id:"_32、什么是同源策略-怎么解决跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32、什么是同源策略-怎么解决跨域问题"}},[t._v("#")]),t._v(" 32、什么是同源策略？怎么解决跨域问题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 同源策略"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 同源策略是浏览器的一种安全策略"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 所谓同源是指域名、协议、端口完全相同，不同源则跨域。\n   解决跨域的方法"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 通过jsonp跨域\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 跨域资源共享（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CORS")]),t._v("  Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com）\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" nginx代理跨域\n")])])]),a("h2",{attrs:{id:"_33、你对websocket了解哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33、你对websocket了解哪些"}},[t._v("#")]),t._v(" 33、你对WebSocket了解哪些")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WebSocket 是"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML5")]),t._v("一种新的协议。它实现了浏览器与服务器全双工通信，能更好的节省服务器资源和带宽并达到实时通讯，它建立在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("之上，同"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("一样通过"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("来传输数据，但是它和"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("最大不同是：\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" WebSocket是一种双向通信协议，在建立连接后，WebSocket服务器和Browser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Client Agent都能主动的向对方发送或接收数据，就像Socket一样；\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" WebSocket需要类似"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("的客户端和服务器端通过握手连接连接成功后才能相互通信。\n")])])]),a("h2",{attrs:{id:"_34、在地址栏输入网址-到数据返回的过程是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34、在地址栏输入网址-到数据返回的过程是什么"}},[t._v("#")]),t._v(" 34、在地址栏输入网址，到数据返回的过程是什么？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 输入url地址后，首先进行"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v("解析，将相应的域名解析为"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址。\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 根据"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址去寻找相应的服务器。\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 与服务器进行"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("的三次握手，建立连接。\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 客户端发送请求，找到相应的资源库。\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 客户端拿到数据，进行相应的渲染。\n")])])]),a("h2",{attrs:{id:"_35、原生-ajax-请求的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35、原生-ajax-请求的步骤"}},[t._v("#")]),t._v(" 35、原生 ajax 请求的步骤")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("答："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("创建异步对象 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("设置请求行  xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("设置请求头  xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("请求没有请求头\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("设置请求体  xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("请求没有请求体"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("参数为"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("监视异步对象的状态变化   xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onreadystatechange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_36、怎么理解三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36、怎么理解三次握手"}},[t._v("#")]),t._v(" 36、怎么理解三次握手")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("字段\t      含义\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URG")]),t._v("\t   紧急指针是否有效。为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，表示某一位需要被优先处理\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("\t   确认号是否有效，一般置为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PSH")]),t._v("\t   提示接收端应用程序立即从"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("缓冲区把数据读走。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RST")]),t._v("\t   对方要求重新建立连接，复位。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SYN")]),t._v("\t   请求建立连接，并在其序列号的字段进行序列号的初始值设定。建立连接，设置为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN")]),t._v("    希望断开连接。\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、三次握手\n    第一次握手：建立连接时，客户端发送syn包到服务器，等待服务器确认。\n    第二次握手：服务器收到syn包，必须确认客户的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SYN")]),t._v("，同时自己也发送一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SYN")]),t._v("包（syn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y）到客户端\n    第三次握手：客户端收到服务器的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SYN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("包，向服务器发送确认包"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("，此包发送完毕，客户端和服务器进入（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("连接成功）状态，完成三次握手\n   （通俗：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，我可以向你请求数据吗。主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，可以请求数据。主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，那我来请求数据了，请求完成，实现三次握手）\n")])])]),a("h2",{attrs:{id:"_37、怎么理解四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37、怎么理解四次挥手"}},[t._v("#")]),t._v(" 37、怎么理解四次挥手")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、四次挥手\n    第一次分手：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("（可以使客户端，也可以是服务器端）向主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("发送一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN")]),t._v("报文段；此时，主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("进入"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN_WAIT_1")]),t._v("状态；这表示主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("没有数据要发送给主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("了。\n    第二次分手：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("收到了主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("发送的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN")]),t._v("报文段，向主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("回一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("报文段，主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("进入"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN_WAIT_2")]),t._v("状态；主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，我“同意”你的关闭请求。\n    第三次分手：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("向主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("发送"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN")]),t._v("报文段，请求关闭连接，同时主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("进入"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LAST_ACK")]),t._v("状态。\n    第四次分手：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("收到主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("发送的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIN")]),t._v("报文段，向主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("发送"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("报文段，然后主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("进入"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TIME_WAIT")]),t._v("状态；主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("收到主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACK")]),t._v("报文段以后，就关闭连接；此时，主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("等待"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("MSL后依然没有收到回复，则证明Server端已正常关闭，那好，主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("也可以关闭连接了。\n    （通俗：主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，我没有数据要发送了，希望断开连接。主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("接到请求后说，同意断开。主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("告诉主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("可以关闭连接了。主机"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("接到可以关闭的指令后，关闭连接，四次挥手完成）\n")])])]),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h2",{attrs:{id:"-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),a("h2",{attrs:{id:"-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[t._v("#")])])])}),[],!1,null,null,null);s.default=r.exports}}]);